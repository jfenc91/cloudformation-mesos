
{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches mesos master ELB and Security groups",

  "Parameters" : {
    "AdminSecurityGroup" : {
      "Description" : "Existing security group that should be granted administrative access to Mesos (e.g., 'sg-123456')",
      "Type" : "AWS::EC2::SecurityGroup::Id"
    },
    "Subnets" : {
      "Description" : "List of VPC subnet IDs for the cluster. Must match the passed AvailabilityZones.",
      "Type" : "List<AWS::EC2::Subnet::Id>"
    },
    "VpcId" : {
      "Description" : "VPC associated with the provided subnets",
      "Type" : "AWS::EC2::VPC::Id"
    },
    "AvailabilityZones": {
      "Description" : "(Optional) If passed, only launch nodes in these AZs (e.g., 'us-east-1a,us-east-1b'). Must match the passed Subnets.",
      "Type" : "CommaDelimitedList",
      "Default" : ""
    },
    "StackCreationTimeout" : {
      "Description" : "Timeout on initial stack creation",
      "Type" : "String",
      "Default": "PT10M"
    }
  },

"Resources" : {
    "MasterSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Mesos Masters",
        "VpcId" : { "Ref" : "VpcId" },
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "0", "ToPort" : "65535", "SourceSecurityGroupId" : { "Ref" : "LbSecurityGroup"} }
        ]
      }
    },

    "MasterToMasterIngress" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : { "Ref" : "MasterSecurityGroup" },
        "IpProtocol" : "tcp",
        "FromPort" : "5050",
        "ToPort" : "5050",
        "SourceSecurityGroupId" : { "Ref" : "MasterSecurityGroup" }
      }
    },

    "LbSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Mesos Master LB",
        "VpcId" : { "Ref" : "VpcId" }
      }
    },

    "PublicElb" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "SecurityGroups": [{ "Ref": "LbSecurityGroup" }, { "Ref" : "AdminSecurityGroup" }],
        "Subnets": { "Ref": "Subnets" },
        "Listeners" : [
          {
            "LoadBalancerPort" : "5050",
            "Protocol" : "HTTP",
            "InstancePort" : "5050",
            "InstanceProtocol" : "HTTP"
          },
          {
            "LoadBalancerPort" : "8080",
            "Protocol" : "HTTP",
            "InstancePort" : "8080",
            "InstanceProtocol" : "HTTP"
          },
          {
            "LoadBalancerPort" : "8090",
            "Protocol" : "HTTP",
            "InstancePort" : "8090",
            "InstanceProtocol" : "HTTP"
          }
        ],
        "HealthCheck" : {
          "Target" : "HTTP:5050/health",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "2",
          "Interval" : "30",
          "Timeout" : "5"
        }
      }
    },

    "PrivateElb" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Scheme" : "internal",
        "SecurityGroups": [{ "Ref": "LbSecurityGroup" }, { "Ref" : "AdminSecurityGroup" }, { "Ref" : "MasterSecurityGroup" }],
        "Subnets": { "Ref": "Subnets" },
        "Listeners" : [
          {
            "LoadBalancerPort" : "5050",
            "Protocol" : "HTTP",
            "InstancePort" : "5050",
            "InstanceProtocol" : "HTTP"
          },
          {
            "LoadBalancerPort" : "8080",
            "Protocol" : "HTTP",
            "InstancePort" : "8080",
            "InstanceProtocol" : "HTTP"
          }
        ],
        "HealthCheck" : {
          "Target" : "HTTP:5050/health",
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "2",
          "Interval" : "30",
          "Timeout" : "5"
        }
      }
    }
  },

  "Outputs" : {
    "MesosMasterSecurityGroup" : {
      "Value" : { "Ref" : "MasterSecurityGroup" }
    },
    "PublicElbAddress" : {
      "Description" : "Mesos Master public ELB",
      "Value" : { "Fn::GetAtt" : [ "PublicElb", "DNSName" ]}
    },
    "PrivateElbAddress" : {
      "Description" : "Mesos Master private ELB",
      "Value" : { "Fn::GetAtt" : [ "PrivateElb", "DNSName" ]}
    }
  }
}
